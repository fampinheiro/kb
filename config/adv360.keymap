#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ls_cw: ls_cw {
            compatible = "zmk,behavior-tap-dance";
            label = "LS_CW";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };
    };

    macros {
    };

    combos {
        compatible = "zmk,combos";

        CB_ESC {
            bindings = <&kp ESCAPE>;
            key-positions = <32 30>;
        };

        CB_TAB {
            bindings = <&kp TAB>;
            key-positions = <31 32>;
        };

        CB_ENTER {
            bindings = <&kp ENTER>;
            key-positions = <41 42>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none  &kp N1            &kp N2              &kp N3          &kp N4   &kp N5  &none                                                                        &none        &kp N6  &kp N7   &kp N8               &kp N9                    &kp N0             &none
&none  &lt 5 Q           &kp W               &kp F           &kp P    &kp B   &none                                                                        &none        &kp J   &kp L    &kp U                &kp Y                     &lt 5 SEMICOLON    &none
&none  &hm LEFT_SHIFT A  &lt 5 R             &lt 4 S         &lt 1 T  &kp G   &none          &none           &none      &none  &none                       &none        &kp M   &lt 2 N  &lt 4 E              &lt 5 I                   &hm RIGHT_SHIFT O  &none
&none  &kp Z             &mt LEFT_CONTROL X  &mt LEFT_ALT C  &kp D    &kp V                                  &none      &none                                           &kp K   &kp H    &mt RIGHT_ALT COMMA  &mt RIGHT_CONTROL PERIOD  &kp SLASH          &none
&none  &none             &none               &none           &none            &kp BACKSPACE  &kp LEFT_SHIFT  &none      &none  &lt 1 LS(LA(LC(LEFT_GUI)))  &lt 5 SPACE          &none    &none                &none                     &none              &none
            >;
        };

        sym0 {
            bindings = <
&trans  &trans     &trans        &trans         &trans  &trans  &trans                                      &trans  &trans     &trans          &trans         &trans             &trans      &trans
&trans  &trans     &trans        &trans         &trans  &trans  &trans                                      &trans  &trans     &kp UNDERSCORE  &kp PIPE       &kp SINGLE_QUOTE   &trans      &trans
&trans  &kp CARET  &kp ASTERISK  &kp AMPERSAND  &none   &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp POUND  &kp TILDE       &kp SLASH      &kp DOUBLE_QUOTES  &kp DOLLAR  &trans
&trans  &trans     &trans        &trans         &trans  &trans                  &trans      &trans                  &trans     &kp MINUS       &kp BACKSLASH  &kp GRAVE          &trans      &trans
&trans  &trans     &trans        &trans         &trans          &trans  &trans  &trans      &trans  &trans  &trans             &trans          &trans         &trans             &trans      &trans
            >;
        };

        sym1 {
            bindings = <
&trans  &trans          &trans           &trans                &trans                 &trans         &trans                                      &trans  &trans  &trans  &trans     &trans    &trans       &trans
&trans  &trans          &kp COLON        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SEMICOLON  &trans                                      &trans  &trans  &trans  &trans     &trans    &trans       &trans
&trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT_SIGN    &trans  &trans  &trans      &trans  &trans  &trans  &trans  &none   &kp EQUAL  &kp PLUS  &kp PERCENT  &trans
&trans  &trans          &kp EXCLAMATION  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans                         &trans      &trans                  &trans  &trans  &trans     &trans    &trans       &trans
&trans  &trans          &trans           &trans                &trans                                &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans     &trans    &trans       &trans
            >;
        };

        num {
            bindings = <
&trans  &trans           &trans  &trans  &trans  &trans           &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp KP_MULTIPLY  &kp N7  &kp N8  &kp N9  &kp KP_SUBTRACT  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N0           &kp N4  &kp N5  &kp N6  &kp KP_PLUS      &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp KP_DIVIDE    &kp N1  &kp N2  &kp N3  &kp KP_EQUAL                     &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans  &trans  &trans                   &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans          &trans          &trans        &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans          &trans          &trans        &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &none   &none   &none   &none   &trans                  &trans      &trans                  &trans  &kp HOME        &kp PAGE_DOWN   &kp PG_UP     &kp END          &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans          &trans          &trans        &trans           &trans
            >;
        };

        meta {
            bindings = <
&trans  &trans  &trans  &trans  &trans      &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp ESCAPE  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &none   &trans  &none   &kp ENTER   &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans      &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        mod {
            bindings = <
&none  &none  &none  &none  &none       &none  &none                                        &trans           &none         &none         &none         &none         &none         &none
&none  &none  &none  &none  &none       &none  &bootloader                                  &bootloader      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none  &none  &none  &none       &none  &none        &none  &none      &none  &none  &none            &none         &bl BL_OFF    &bl BL_INC    &bl BL_DEC    &bl BL_OFF    &none
&none  &none  &none  &none  &macro_ver  &none                      &none      &none                          &none         &none         &none         &none         &none         &none
&none  &none  &none  &none  &none              &bt BT_CLR   &none  &none      &none  &none  &rgb_ug RGB_TOG                &none         &none         &none         &none         &none
            >;
        };
    };
};
